# docker-compose.yaml
version: '3.8'

services:
  proxy-service:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.dev
    container_name: proxy-service
    ports:
      - "8080:8080"  # Application port
      - "9090:9090"  # Metrics port
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - REDIS_ADDRESS=redis:6379
      - JWT_SECRET=local-development-secret
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
    networks:
      - proxy-network
    depends_on:
      - mongodb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mongodb:
    image: mongo:latest
    container_name: proxy-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=proxy_service
    networks:
      - proxy-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:latest
    container_name: proxy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: proxy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:latest
    container_name: proxy-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./deployment/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./deployment/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - proxy-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    name: proxy-mongodb-data
  redis_data:
    name: proxy-redis-data
  prometheus_data:
    name: proxy-prometheus-data
  grafana_data:
    name: proxy-grafana-data
  go-mod-cache:
    name: proxy-go-mod-cache

networks:
  proxy-network:
    name: proxy-network
    driver: bridge